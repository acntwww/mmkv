
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    // For JVM-only demo, we'll create a mock MMKV interface
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'
}

// Create sources jar
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

// Create javadoc jar
task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            artifact sourcesJar
            artifact javadocJar
            
            groupId = LIBRARY_GROUP
            artifactId = 'mmkv'
            version = LIBRARY_VERSION
            
            pom {
                name = 'MMKV Kotlin'
                description = 'Kotlin delegate property wrapper for Tencent MMKV library'
                url = 'https://github.com/acntwww/mmkv'
                
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                
                developers {
                    developer {
                        id = 'reezy'
                        name = 'Reezy'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/acntwww/mmkv.git'
                    developerConnection = 'scm:git:ssh://github.com:acntwww/mmkv.git'
                    url = 'https://github.com/acntwww/mmkv/tree/main'
                }
            }
        }
    }
    
    repositories {
        maven {
            name = 'local'
            url = uri(rootProject.ext.localRepoPath)
        }
        
        // Add MavenCentral publishing repository (commented out for demo)
        // maven {
        //     name = 'OSSRH'
        //     url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
        //     credentials {
        //         username = project.findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME')
        //         password = project.findProperty('ossrhPassword') ?: System.getenv('OSSRH_PASSWORD')
        //     }
        // }
    }
}